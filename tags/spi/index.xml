<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SPI on Holger Schurig's Computer Calisthenics &amp; Orthodontia</title><link>https://holgerschurig.github.io/tags/spi/</link><description>Recent content in SPI on Holger Schurig's Computer Calisthenics &amp; Orthodontia</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 28 Mar 2016 17:48:46 +0200</lastBuildDate><atom:link href="https://holgerschurig.github.io/tags/spi/index.xml" rel="self" type="application/rss+xml"/><item><title>ATmega328 von Raspberry aus programmieren</title><link>https://holgerschurig.github.io/de/raspi-atmega/</link><pubDate>Mon, 28 Mar 2016 17:48:46 +0200</pubDate><guid>https://holgerschurig.github.io/de/raspi-atmega/</guid><description>&lt;p>Viele Leute kennen den ATmega von den Arduino-Projekten. Dort sind die
Prozessoren bereits mit einem sog. &amp;lsquo;Bootloader&amp;rsquo; versehen, man kann sie
also über deren serielle Schnittstelle programmieren.&lt;/p>
&lt;p>Was aber, wenn man einen &amp;ldquo;rohen&amp;rdquo; ATmega hat, frisch vom
Elektronikladen? Und außerdem kein AVR-Programmiergerät? Dann nimmt
man eben des Raspberry zum Programmieren!&lt;/p></description></item><item><title>Lauflicht mit Raspberry und 74HC595</title><link>https://holgerschurig.github.io/de/raspi-lauflicht/</link><pubDate>Sun, 06 Mar 2016 12:32:10 +0100</pubDate><guid>https://holgerschurig.github.io/de/raspi-lauflicht/</guid><description>&lt;p>Bei dieser Schaltung geht es mir weniger darum, 8 LEDs zu betreiben.
Die kann man nämlich auch direkt am Raspberry Pi anschließen. Sondern
es geht darum, mit den Schieberegister 74HC595 zu experimentieren.&lt;/p>
&lt;p>Dieses steuere ich zunächst durch diverse GPIO Ports an.&lt;/p>
&lt;p>Und danach betreibe ich es am SPI-Port des RasPi. Das funktioniert
wunderbar, obwohl der Text &amp;ldquo;SPI&amp;rdquo; nirgendwo im 74HC595-Datenblatt
auftaucht :-)&lt;/p></description></item></channel></rss>