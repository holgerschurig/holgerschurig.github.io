<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Emacs on Holger Schurig's Computer Calisthenics &amp; Orthodontia</title><link>https://holgerschurig.github.io/tags/emacs/</link><description>Recent content in Emacs on Holger Schurig's Computer Calisthenics &amp; Orthodontia</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 15 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://holgerschurig.github.io/tags/emacs/index.xml" rel="self" type="application/rss+xml"/><item><title>Export patches from Emacs' Notmuch</title><link>https://holgerschurig.github.io/en/emacs-notmuch-export-patch/</link><pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/emacs-notmuch-export-patch/</guid><description>I’m reading several linux-kernel related mailing lists. They are full of proposed patches. And from time to time a few of them look interesting. So I wanted to have an easy (and fast) solution of exporting those patches: with a keystroke, and without the need of specifying patch names.
Format of a patch email If you ever contributed a patch to Linux, you’d know that your patch must follow some formatting rules, or it might be ignored.</description></item><item><title>Efficiently untangling Elisp from .org files</title><link>https://holgerschurig.github.io/en/emacs-efficiently-untangling-elisp/</link><pubDate>Thu, 12 May 2016 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/emacs-efficiently-untangling-elisp/</guid><description>&lt;p>Many people keep their Emacs config in and org-mode file because it’s
easier to manage.&lt;/p>
&lt;p>However, we need to extract the Elisp parts out of the org file and
evaluate them somehow. org-mode has a built-in command for this:
&lt;code>(org-babel-load-file &amp;quot;config.org&amp;quot;)&lt;/code>. However, this is an org-mode
command, and org-mode is huge. So your init.el needs to load a good
amount of org-mode just to get the elisp out of it.
But to be able to do this you’d
need to load a good amount of the org-mode file.&lt;/p>
&lt;p>I wanted to have something better. Something that is flexible and
gives me a quicker startup time.&lt;/p></description></item><item><title>A nicer notmuch-hello screen for Emacs</title><link>https://holgerschurig.github.io/en/emacs-notmuch-hello/</link><pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/emacs-notmuch-hello/</guid><description>&lt;p>Here I define my own hello screen for &lt;a href="http://notmuchmail.org/">notmuch&lt;/a>. However, I didn’t like it’s original
“hello” screen not that much. So I wrote something to replace it.&lt;/p></description></item><item><title>Let Hugo ignore Emacs lockfiles</title><link>https://holgerschurig.github.io/en/let-hugo-ignore-emacs-lockfiles/</link><pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/let-hugo-ignore-emacs-lockfiles/</guid><description>&lt;p>When you run&lt;/p>
&lt;pre>&lt;code>hugo server
&lt;/code>&lt;/pre>
&lt;p>the static web-site generator &lt;a href="http://gohugo.io">Hugo&lt;/a> creates a local
server that you can use to fine-tune your pages. Hugo sits and watches
your content and layout directory for any changes. Whenever a file changes,
it re-renders the pages and even tells your browser to live-relead the pages.&lt;/p>
&lt;p>Very nice.&lt;/p>
&lt;p>Except that it doesn&amp;rsquo;t work with Emacs. But there&amp;rsquo;s a cure.&lt;/p></description></item><item><title>Blog from Org-Mode to Hugo</title><link>https://holgerschurig.github.io/en/emacs-blog-from-org-to-hugo/</link><pubDate>Thu, 31 Mar 2016 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/emacs-blog-from-org-to-hugo/</guid><description>&lt;p>I use the static web-site generator &lt;a href="https://gohugo.io/">Hugo&lt;/a> to create my home page. I
also use &lt;a href="https://www.gnu.org/software/emacs/">Emacs&lt;/a> as my main editor. Hugo is good with &lt;a href="https://help.github.com/categories/writing-on-github/">Markdown&lt;/a>. Emacs is
good at Markdown, too. But much better with &lt;a href="http://orgmode.org/">Org-Mode&lt;/a>.&lt;/p>
&lt;p>If you want …&lt;/p>
&lt;ul>
&lt;li>export one &lt;code>.org&lt;/code> file as one web page, look at Giles Paterson
&lt;a href="https://vurt.co.uk/post/blogging-with-emacs-and-hugo/">solution&lt;/a>&lt;/li>
&lt;li>export just a subtree of an org-file (e.g. from your org-based Emacs
configuration), then look here.&lt;/li>
&lt;/ul></description></item><item><title>mastodon.el: a Hydra to memorize/access it's many commands</title><link>https://holgerschurig.github.io/en/emacs-mastodon-hydra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/emacs-mastodon-hydra/</guid><description>Mastodon has a lot of commands. You can access most of them directly via keybindings, just use M-x describe-mode or the h or ? keys. Some more are described on the project website, https://codeberg.org/martianh/mastodon.el in the README.org
But, if you don&amp;rsquo;t use Mastodon that regularly, maybe a Hydra can help you? Here is a sample version:
![img](./mastodon-hydra.png]
(defhydra mastodon-help (:color blue :hint nil) &amp;#34; Timelines^^ Toots^^^^ Own Toots^^ Profiles^^ Users/Follows^^ Misc^^ ^^-----------------^^^^--------------------^^----------^^-------------------^^------^^----- _H_ome _n_ext _p_rev _r_eply _A_uthors follo_W_ _X_ lists _L_ocal _T_hread of toot^^ wri_t_e user _P_rofile _N_otifications f_I_lter _F_ederated (un) _b_oost^^ _e_dit ^^ _R_equests _C_opy URL fa_V_orites (un) _f_avorite^^ _d_elete _O_wn su_G_estions _S_earch _#_ tagged (un) p_i_n^^ ^^ _U_pdate own _M_ute user _h_elp _@_ mentions (un) boo_k_mark^^ show _E_dits ^^ _B_lock user boo_K_marks _v_ote^^ trendin_g_ _u_pdate &amp;#34; (&amp;#34;H&amp;#34; mastodon-tl--get-home-timeline) (&amp;#34;L&amp;#34; mastodon-tl--get-local-timeline) (&amp;#34;F&amp;#34; mastodon-tl--get-federated-timeline) (&amp;#34;V&amp;#34; mastodon-profile--view-favourites) (&amp;#34;#&amp;#34; mastodon-tl--get-tag-timeline) (&amp;#34;@&amp;#34; mastodon-notifications--get-mentions) (&amp;#34;K&amp;#34; mastodon-profile--view-bookmarks) (&amp;#34;g&amp;#34; mastodon-search--trending-tags) (&amp;#34;u&amp;#34; mastodon-tl--update :exit nil) (&amp;#34;n&amp;#34; mastodon-tl--goto-next-toot) (&amp;#34;p&amp;#34; mastodon-tl--goto-prev-toot) (&amp;#34;T&amp;#34; mastodon-tl--thread) (&amp;#34;b&amp;#34; mastodon-toot--toggle-boost :exit nil) (&amp;#34;f&amp;#34; mastodon-toot--toggle-favourite :exit nil) (&amp;#34;i&amp;#34; mastodon-toot--pin-toot-toggle :exit nil) (&amp;#34;k&amp;#34; mastodon-toot--bookmark-toot-toggle :exit nil) (&amp;#34;c&amp;#34; mastodon-tl--toggle-spoiler-text-in-toot) (&amp;#34;v&amp;#34; mastodon-tl--poll-vote) (&amp;#34;A&amp;#34; mastodon-profile--get-toot-author) (&amp;#34;P&amp;#34; mastodon-profile--show-user) (&amp;#34;O&amp;#34; mastodon-profile--my-profile) (&amp;#34;U&amp;#34; mastodon-profile--update-user-profile-note) (&amp;#34;W&amp;#34; mastodon-tl--follow-user) (&amp;#34;N&amp;#34; mastodon-notifications-get) (&amp;#34;R&amp;#34; mastodon-profile--view-follow-requests) (&amp;#34;G&amp;#34; mastodon-tl--get-follow-suggestions) (&amp;#34;M&amp;#34; mastodon-tl--mute-user) (&amp;#34;B&amp;#34; mastodon-tl--block-user) (&amp;#34;r&amp;#34; mastodon-toot--reply) (&amp;#34;t&amp;#34; mastodon-toot) (&amp;#34;e&amp;#34; mastodon-toot--edit-toot-at-point) (&amp;#34;d&amp;#34; mastodon-toot--delete-toot) (&amp;#34;E&amp;#34; mastodon-toot--view-toot-edits) (&amp;#34;I&amp;#34; mastodon-tl--view-filters) (&amp;#34;X&amp;#34; mastodon-tl--view-lists) (&amp;#34;C&amp;#34; mastodon-toot--copy-toot-url) (&amp;#34;S&amp;#34; mastodon-search--search-query) (&amp;#34;h&amp;#34; describe-mode) (&amp;#34;q&amp;#34; doom/escape))</description></item></channel></rss>