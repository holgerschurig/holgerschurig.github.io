<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Make on Holger Schurig's Computer Calisthenics &amp; Orthodontia</title><link>https://holgerschurig.github.io/tags/make/</link><description>Recent content in Make on Holger Schurig's Computer Calisthenics &amp; Orthodontia</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 18 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://holgerschurig.github.io/tags/make/index.xml" rel="self" type="application/rss+xml"/><item><title>flexibler Hardware-Tester für x86-Systeme: hwtester</title><link>https://holgerschurig.github.io/de/hwtester/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/hwtester/</guid><description>&lt;p>Hier geht es darum, frisch produzierte Geräte der Klassen DLT-V83 und DLT-V72
auf Herz und Nieren zu prüfen.&lt;/p></description></item><item><title>Automatische Image-Erstellung</title><link>https://holgerschurig.github.io/de/mkimage/</link><pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/mkimage/</guid><description>&lt;p>System um Linux-Images automatisch zu erstellen (einfacher und schneller als
OpenEmbedded, Puppet, Ansible etc).&lt;/p></description></item><item><title>Zephyr: fixing LSP issues</title><link>https://holgerschurig.github.io/en/zephyr-fixing-lsp-issues/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/zephyr-fixing-lsp-issues/</guid><description>&lt;p>Zephyr uses command-line arguments for GCC that the clangd LSP server doesn&amp;rsquo;t &lt;br/>
understand. Here I present one approach how to fix this. &lt;br/>&lt;/p></description></item><item><title>Zepyhr: multi-board setup</title><link>https://holgerschurig.github.io/en/zephyr-multi-board/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/zephyr-multi-board/</guid><description>&lt;p>This blog post shows how to setup a Zephyr project that you can use for several boards. &lt;br/>&lt;/p></description></item><item><title>Zepyhr: reproducible project setup</title><link>https://holgerschurig.github.io/en/zephyr-reproducible-project-setup/</link><pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/en/zephyr-reproducible-project-setup/</guid><description>&lt;p>This blog post demonstrates how to set up a Zephyr project in a &lt;strong>reproducible&lt;/strong> &lt;br/>
manner. Additionally, it provides some Makefile tricks and best practices for &lt;br/>
using this powerful tool effectively. &lt;br/>&lt;/p>
&lt;p>While you can set up a Zephyr project manually, following the &lt;a href="https://docs.zephyrproject.org/latest/develop/getting/started/index.html">Getting Started &lt;br/>
Guide&lt;/a>, a reproducible and automatic approach has several advantages. Firstly, &lt;br/>
any changes made to the project will be automatically documented in GIT. &lt;br/>
Furthermore, it is easier to move the project onto CI/CD servers or into Docker &lt;br/>
containers. &lt;br/>&lt;/p></description></item></channel></rss>