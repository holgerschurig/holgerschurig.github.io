<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openembedded on Holger Schurig's Computer Calisthenics &amp; Orthodontia</title><link>https://holgerschurig.github.io/tags/openembedded/</link><description>Recent content in openembedded on Holger Schurig's Computer Calisthenics &amp; Orthodontia</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://holgerschurig.github.io/tags/openembedded/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux-Image auf Basis von i.MX&amp; RISC Prozessor für den Tagebau</title><link>https://holgerschurig.github.io/de/mkarm/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/mkarm/</guid><description>&lt;p>Wie man sich das zeitaufwändige Cross-Compilieren mit OpenEmbedded spart. &lt;br/>&lt;/p>
&lt;p>Oder: Implementierung eines Linux-Images auf eine RISC-Platform für einen sehr &lt;br/>
rauhen Anwendungsfall. &lt;br/>&lt;/p></description></item><item><title>MNCI: Handterminal mit ARM (Intel PXA320)</title><link>https://holgerschurig.github.io/de/mnci/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/mnci/</guid><description>&lt;p>Hier stelle ich ein komplexes Projekt vor, bei dem ich federführend die gesamte &lt;br/>
Software erstellt habe. &lt;br/>&lt;/p></description></item><item><title>OpenEmbedded</title><link>https://holgerschurig.github.io/de/openembedded/</link><pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/openembedded/</guid><description>&lt;p>Hier wird mein zweites größeres Embedded-Projekt beschrieben: ein ARM &lt;br/>
Terminal zum Einbau in große &amp;ldquo;Dump-Trucks&amp;rdquo;. &lt;br/>&lt;/p></description></item></channel></rss>