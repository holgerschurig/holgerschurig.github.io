<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>job on Holger Schurig's Computer Calisthenics &amp; Orthodontia</title><link>https://holgerschurig.github.io/categories/job/</link><description>Recent content in job on Holger Schurig's Computer Calisthenics &amp; Orthodontia</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://holgerschurig.github.io/categories/job/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux-Image auf Basis von i.MX&amp; RISC Prozessor für den Tagebau</title><link>https://holgerschurig.github.io/de/mkarm/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/mkarm/</guid><description>&lt;p>Wie man sich das zeitaufwändige Cross-Compilieren mit OpenEmbedded spart. &lt;br/>&lt;/p>
&lt;p>Oder: Implementierung eines Linux-Images auf eine RISC-Platform für einen sehr &lt;br/>
rauhen Anwendungsfall. &lt;br/>&lt;/p></description></item><item><title>MNCI: Handterminal mit ARM (Intel PXA320)</title><link>https://holgerschurig.github.io/de/mnci/</link><pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/mnci/</guid><description>&lt;p>Hier stelle ich ein komplexes Projekt vor, bei dem ich federführend die gesamte &lt;br/>
Software erstellt habe. &lt;br/>&lt;/p></description></item><item><title>OpenEmbedded</title><link>https://holgerschurig.github.io/de/openembedded/</link><pubDate>Fri, 19 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/openembedded/</guid><description>&lt;p>Hier wird mein zweites größeres Embedded-Projekt beschrieben: ein ARM &lt;br/>
Terminal zum Einbau in große &amp;ldquo;Dump-Trucks&amp;rdquo;. &lt;br/>&lt;/p></description></item><item><title>flexibler Hardware-Tester für x86-Systeme: hwtester</title><link>https://holgerschurig.github.io/de/hwtester/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/hwtester/</guid><description>&lt;p>Hier geht es darum, frisch produzierte Geräte der Klassen DLT-V83 und DLT-V72 &lt;br/>
auf Herz und Nieren zu prüfen. &lt;br/>&lt;/p></description></item><item><title>Automatische Image-Erstellung</title><link>https://holgerschurig.github.io/de/mkimage/</link><pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/mkimage/</guid><description>&lt;p>System um Linux-Images automatisch zu erstellen (einfacher und schneller als &lt;br/>
OpenEmbedded, Puppet, Ansible etc). &lt;br/>&lt;/p></description></item><item><title>Dynamischer Flash-Schutz</title><link>https://holgerschurig.github.io/de/dynamischer-flashschutz/</link><pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/dynamischer-flashschutz/</guid><description>&lt;p>Hier geht es darum, wie man den Flash-Speicher vor Wear-Out schützen kann, &lt;br/>
ohne die Usability allzu sehr einzuschränken. &lt;br/>&lt;/p></description></item><item><title>Combined-Linux: ein Image für viele Geräte</title><link>https://holgerschurig.github.io/de/combined-linux/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://holgerschurig.github.io/de/combined-linux/</guid><description>&lt;p>Hier ging es darum, ein und dasselbe Linux-Image auf eine Vielzahl von Geräte zu portieren. &lt;br/>&lt;/p>
&lt;p>Dies stand im Gegensatz zu den Windows- und Windows-Embedded-Images. Hier wurde &lt;br/>
für jedes Gerät ein eigenes Image erstellt. Gab es eine Innovation, mussten alle &lt;br/>
diese Image jeweils neu erstellt werden &amp;mdash; ein zeitraubender Prozess. &lt;br/>&lt;/p>
&lt;p>Ich wollte ein &amp;ldquo;Combined Linux&amp;rdquo; machen: eine Image, das alle Features in sich &lt;br/>
enthält. Das man überall installieren kann. Das die Hardware erkennt und die &lt;br/>
jeweils eingebaute Hardware passend anspricht und zur Verfügung stellt. &lt;br/>&lt;/p></description></item></channel></rss>